spring:
  datasource:
    #--H2 database
    #url: jdbc:h2:mem:mydb
    #url: jdbc:h2:file:/data/demo
    #username: sa
    ##password: password
    #driverClassName: org.h2.Driver
    
    #--JDBC properties
    url: jdbc:mysql://localhost:3306/banking_directory
    username: springstudent
    password: springstudent
  #--H2 database  
  jpa:
    #spring.jpa.database-platform: org.hibernate.dialect.H2Dialect

    #Logging JPA Queries To Standard Output
    #to dump the queries to standard out
    #show-sql: true
    #To beautify or pretty print the SQL
    #properties:
    #  hibernate:
    #    format_sql: true

    #script-based initialization through schema.sql and data.sql and also Hibernate initialization
    #defer-datasource-initialization: true
    
  #--configure JPA/Hibernate to auto create the tables

    hibernate:
      #only script-based schema generation is performed using schema.sql.
      ddl-auto: none

  #--Accessing the H2 GUI Console
  #h2:
  #  console.enabled: true
  #--populate database using script-based initialization
  sql:
    init:
      mode: always
      
#--turn off the Spring Boot banner
main:
  banner-mode: off



#--
#--Simple Spring Security
#--
#--to secure REST endpoints:
  security:
    user:
      name: scott
      password: tiger

server:
  port: 8081
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: always
    include-exception: false
  #set the context path of application
  #all requests should be prefixed with /api
  #doesn't seem to work as intended
  #servlet:
    #context-path: /api
    
#--reduce logging level. set logging level to warn
#--Logging JPA Queries Via Loggers
#--the first line shows the sql statement
#--the second statement shows the sql values
#--logging.level.org.hibernate.orm.jdbc.bind=trace
#--if fail, try logging.level.org.hibernate.type.descriptor.sql=trace
logging:
  level:
    root: warn
    org:
      hibernate:
        #--add logging configs to display SQL statements
        #--log SQL statements
        SQL: debug
        orm:
          jdbc:
            #--add logging configs to display SQL statements
            #--log values for SQL statements
            bind: trace
      springframework:
        security: debug

#for actuator
management:
  endpoints:
    web:
      exposure:
        #include: health,info
        #expose all endpoints
        include: "*"
        #exclude individual endpoint with comma-delimited list
        #exclude: health
  info:
    env:
      enabled: true

info:
  app:
    name: Simple Banking App
    description: An exercise for Spring
    version: 1.0.0


#custom properties
sample:
  employees: src\main\resources\csv\employees.csv
  customers: src\main\resources\csv\customers.csv
  savingDeposit: src\main\resources\csv\savingDeposit.csv
  accountType: src\main\resources\csv\accountType.csv
  savingDepositTransactions: src\main\resources\csv\savingDepositTransactions.csv

bootstrap:
  enabled: false